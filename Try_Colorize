from PIL import Image


def color_image(name_image):
    import sys
    sys.setrecursionlimit(10000)
    image = Image.open(name_image)
    size = image.size
    firstcoord = coord_to_tuple(input(f"Enter coordinates for coloration between {size} (e.g. -> x,y):"))
    final_coordinates = right_seed(firstcoord,image)
    nlines = size[1]
    ncolumns = size[0]
    ifinal=final_coordinates[1]
    jfinal=final_coordinates[0]
    recursion (jfinal,ifinal,ncolumns,nlines,image)
    image.show()
    image.save(f"{name_image}_colorized.jpg", "JPEG")


def coord_to_tuple (user_input):
    tab = user_input.split(",")
    tup = (int(tab[0]),int(tab[1]))
    return tup


def right_seed(coord,im):
    coordinates = coord
    im.putpixel(coordinates,(110))
    im.show()
    validation = input("Are you happy with the seed position ? Enter True or False :")
    is_valid = validation == "True"
    if is_valid :
        return coordinates
    else :
        while not is_valid :
            coordinates = coord_to_tuple(input("Enter your new coordinates (e.g. -> x,y):"))
            im.putpixel(coordinates,(110))
            im.show()
            validation = input("Are you happy with the seed position ? Enter True or False :")
            is_valid = validation == "True"
        return coordinates

def recursion(j,i,columns,lines,im):
    if ((im.getpixel((j+1, i)) < 230 or j+1 > columns-1)
        and (im.getpixel((j-1, i)) < 230 or j-1 < 0)
        and (im.getpixel((j, i+1)) < 230 or i+1 > lines-1)
        and (im.getpixel((j, i-1)) < 230 or i-1 < 0)):  # Base case: pixel colored
        return
    im.putpixel(((j,i)),125)
##    if (im.getpixel((j+1, i)) > 230 and j+1 <= columns-1):
##        return recursion (j+1,i,columns,lines,im)
##    if (im.getpixel((j-1, i)) > 230 and j-1 >= 0) :
##        return recursion (j-1,i,columns,lines,im)
##    if(im.getpixel((j, i+1)) > 230 and i+1 <= lines-1) :
##        return recursion (j,i+1,columns,lines,im)
##    if(im.getpixel((j, i-1)) > 230 and i-1 >= 0) :
##        return recursion (j,i-1,columns,lines,im)
    if j != 0 and i != 0 and i != lines - 1 and j != columns - 1:  # pixels surrounded by pixels
        if im.getpixel((j - 1, i)) >= 200:
            recursion(j - 1, i, columns, lines, im)
        if im.getpixel((j + 1, i)) >= 200:
            recursion(j + 1, i, columns, lines, im)
        if im.getpixel((j, i + 1)) >= 200:
            recursion(j, i + 1, columns, lines, im)
        if im.getpixel((j, i - 1)) >= 200:
            recursion(j, i - 1, columns, lines, im)
    if i == 0 and j != 0 and j != columns - 1:  # pixels at the sides
        if im.getpixel((j - 1, i)) >= 200:
            recursion(j - 1, i, columns, lines, im)
        if im.getpixel((j + 1, i)) >= 200:
            recursion(j + 1, i, columns, lines, im)
        if im.getpixel((j, i + 1)) >= 200:
            recursion(j, i + 1, columns, lines, im)
    elif j == 0 and i != 0 and i != lines - 1:
        if im.getpixel((j, i - 1)) >= 200:
            recursion(j, i - 1, columns, lines, im)
        if im.getpixel((j + 1, i)) >= 200:
            recursion(j + 1, i, columns, lines, im)
        if im.getpixel((j, i + 1)) >= 200:
            recursion(j, i + 1, columns, lines, im)
    elif j == columns - 1 and i != 0 and i != lines - 1:
        if im.getpixel((j - 1, i)) >= 200:
            recursion(j - 1, i, columns, lines, im)
        if im.getpixel((j, i - 1)) >= 200:
            recursion(j, i - 1, columns, lines, im)
        if im.getpixel((j, i + 1)) >= 200:
            recursion(j, i + 1, columns, lines, im)
    elif i == lines - 1 and j != 0 and j != columns - 1:
        if im.getpixel((j - 1, i)) >= 200:
            recursion(j - 1, i, columns, lines, im)
        if im.getpixel((j + 1, i)) >= 200:
            recursion(j + 1, i, columns, lines, im)
        if im.getpixel((j, i - 1)) >= 200:
            recursion(j, i - 1, columns, lines, im)
    elif j == columns - 1 and i == lines - 1:  # pixels at the corners
        if im.getpixel((j - 1, i)) >= 200:
            recursion(j - 1, i, columns, lines, im)
        if im.getpixel((j, i - 1)) >= 200:
            recursion(j, i - 1, columns, lines, im)
    elif j == 0 and i == 0:
        if im.getpixel((j + 1, i)) >= 200:
            recursion(j + 1, i, columns, lines, im)
        if im.getpixel((j, i + 1)) >= 200:
            recursion(j, i + 1, columns, lines, im)
    elif j == 0 and i == lines - 1:
        if im.getpixel((j + 1, i)) >= 200:
            recursion(j + 1, i, columns, lines, im)
        if im.getpixel((j, i - 1)) >= 200:
            recursion(j, i - 1, columns, lines, im)
    elif j == columns - 1 and i == 0:
        if im.getpixel((j - 1, i)) >= 200:
            recursion(j - 1, i, columns, lines, im)
        if im.getpixel((j, i + 1)) >= 200:
            recursion(j, i + 1, columns, lines, im)
